testPushCountNullableThroughUnion
LogicalAggregate(group=[{0}], EXPR$1=[COUNT($1)])
  LogicalProject(ENAME=[$1], MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0}], SUM1=[COUNT($1)])
      LogicalProject(ENAME=[$1], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0}], EXPR$1=[COUNT($1)])
      LogicalProject(ENAME=[$1], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

testDistinctCountMultiple
LogicalAggregate(group=[{0}], EXPR$1=[COUNT(DISTINCT $1)], EXPR$2=[COUNT(DISTINCT $2)])
  LogicalProject(DEPTNO=[$7], ENAME=[$1], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[COUNT($1)], EXPR$2=[COUNT($2)])
  LogicalProject(DEPTNO=[$7], ENAME=[$1], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])

testPushCountStarThroughUnion
LogicalAggregate(group=[{0}], EXPR$1=[COUNT()])
  LogicalProject(ENAME=[$1])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0}], COUNT1=[COUNT()])
      LogicalProject(ENAME=[$1])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0}], COUNT1=[COUNT()])
      LogicalProject(ENAME=[$1])
        EnumerableTableScan(table=[[EMP]])

testPushCountFilterThroughUnion
LogicalAggregate(group=[{0}], EXPR$1=[COUNT()])
  LogicalProject(DEPTNO=[$7])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 20)])
          EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0}], COUNT1=[COUNT()])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0}], COUNT1=[COUNT()])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 20)])
          EnumerableTableScan(table=[[EMP]])

testPushSumCountStarGroupingSetsThroughUnion
LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)], EXPR$3=[COUNT()], EXPR$4=[MIN($0)], EXPR$5=[MAX($2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], EMPNO=[$0])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)], EXPR$3=[SUM($3)], EXPR$4=[MIN($4)], EXPR$5=[MAX($5)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}], SUM1=[SUM($2)], COUNT1=[COUNT()], MIN1=[MIN($0)], MAX1=[MAX($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], EMPNO=[$0])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}], SUM1=[SUM($2)], COUNT1=[COUNT()], MIN1=[MIN($0)], MAX1=[MAX($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], EMPNO=[$0])
        EnumerableTableScan(table=[[EMP]])

testPushAggregateThroughJoinDistinct
LogicalAggregate(group=[{0}], SUM_SAL=[SUM($1)], C=[COUNT()])
  LogicalProject(NAME=[$10], SAL=[$6])
    LogicalJoin(condition=[=($9, $11)], joinType=[inner])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], JOB0=[CAST($2):VARCHAR])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(NAME=[$0], NAME0=[CAST($0):VARCHAR])
        LogicalAggregate(group=[{0}])
          LogicalProject(NAME=[$1])
            EnumerableTableScan(table=[[DEPT]])

LogicalProject(NAME=[$4], SUM_SAL=[$1], C=[$2])
  LogicalJoin(condition=[=($3, $5)], joinType=[inner])
    LogicalProject(JOB=[$0], SUM_SAL=[$1], C=[$2], JOB0=[CAST($0):VARCHAR])
      LogicalAggregate(group=[{0}], SUM_SAL=[SUM($1)], C=[COUNT()])
        LogicalProject(JOB=[$2], SAL=[$6])
          EnumerableTableScan(table=[[EMP]])
    LogicalProject(NAME=[$0], NAME0=[CAST($0):VARCHAR])
      LogicalAggregate(group=[{0}])
        LogicalProject(NAME=[$1])
          EnumerableTableScan(table=[[DEPT]])

testPushSumCountStarThroughUnion
LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[COUNT()], EXPR$3=[MIN($2)], EXPR$4=[MAX($1)])
  LogicalProject(ENAME=[$1], EMPNO=[$0], DEPTNO=[$7])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)], EXPR$2=[SUM($2)], EXPR$3=[MIN($3)], EXPR$4=[MAX($4)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0}], SUM1=[SUM($1)], COUNT1=[COUNT()], MIN1=[MIN($2)], MAX1=[MAX($1)])
      LogicalProject(ENAME=[$1], EMPNO=[$0], DEPTNO=[$7])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0}], SUM1=[SUM($1)], COUNT1=[COUNT()], MIN1=[MIN($2)], MAX1=[MAX($1)])
      LogicalProject(ENAME=[$1], EMPNO=[$0], DEPTNO=[$7])
        EnumerableTableScan(table=[[EMP]])

testPushSumNullableGroupingSetsThroughUnion
LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}], SUM1=[SUM($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}], SUM1=[SUM($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

testDistinctCountGroupingSets1
LogicalAggregate(group=[{0, 1}], EXPR$2=[COUNT(DISTINCT $2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], ENAME=[$1])
    EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[COUNT($2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], ENAME=[$1])
    EnumerableTableScan(table=[[EMP]])

testPushCountNullableGroupingSetsThroughUnion
LogicalAggregate(group=[{0, 1}], EXPR$2=[COUNT($2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}], COUNT1=[COUNT($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}], COUNT1=[COUNT($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

testPushAggregateSumNoGroup
LogicalAggregate(group=[{}], EXPR$0=[COUNT()])
  LogicalProject($f0=[0])
    LogicalJoin(condition=[=($9, $12)], joinType=[inner])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], JOB0=[CAST($2):VARCHAR])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
        EnumerableTableScan(table=[[DEPT]])

LogicalAggregate(group=[{}], EXPR$0=[SUM($0)])
  LogicalProject($f0=[*($1, $4)])
    LogicalJoin(condition=[=($2, $5)], joinType=[inner])
      LogicalProject(JOB=[$0], COUNT1=[$1], JOB0=[CAST($0):VARCHAR])
        LogicalAggregate(group=[{0}], COUNT1=[COUNT()])
          LogicalProject(JOB=[$2])
            EnumerableTableScan(table=[[EMP]])
      LogicalProject(NAME=[$0], COUNT2=[$1], NAME0=[CAST($0):VARCHAR])
        LogicalAggregate(group=[{0}], COUNT2=[COUNT()])
          LogicalProject(NAME=[$1])
            EnumerableTableScan(table=[[DEPT]])

testPushMaxNullableGroupingSetsThroughUnion
LogicalAggregate(group=[{0, 1}], EXPR$2=[MAX($2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[MAX($2)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}], MAX1=[MAX($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}], MAX1=[MAX($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

testPushSumNullableNOGBYThroughUnion
LogicalAggregate(group=[{}], EXPR$0=[SUM($0)])
  LogicalProject(MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{}], EXPR$0=[SUM($0)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{}], SUM1=[SUM($0)])
      LogicalProject(MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{}], SUM2=[SUM($0)])
      LogicalProject(MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

testPushAggregateThroughJoin1
LogicalAggregate(group=[{0, 1}])
  LogicalProject(JOB=[$2], NAME=[$11])
    LogicalJoin(condition=[=($9, $12)], joinType=[inner])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], JOB0=[CAST($2):VARCHAR])
        LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
        EnumerableTableScan(table=[[DEPT]])

LogicalProject(JOB=[$0], NAME=[$2])
  LogicalJoin(condition=[=($1, $3)], joinType=[inner])
    LogicalProject(JOB=[$0], JOB0=[CAST($0):VARCHAR])
      LogicalAggregate(group=[{0}])
        LogicalProject(JOB=[$2])
          LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
            EnumerableTableScan(table=[[EMP]])
    LogicalProject(NAME=[$0], NAME0=[CAST($0):VARCHAR])
      LogicalAggregate(group=[{0}])
        LogicalProject(NAME=[$1])
          EnumerableTableScan(table=[[DEPT]])

testPushAggregateThroughJoin4
LogicalAggregate(group=[{0}])
  LogicalProject(DEPTNO=[$7])
    LogicalJoin(condition=[=($7, $9)], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])

LogicalProject(DEPTNO=[$0])
  LogicalJoin(condition=[=($0, $1)], joinType=[inner])
    LogicalAggregate(group=[{0}])
      LogicalProject(DEPTNO=[$7])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

testPushAggregateThroughJoin5
LogicalAggregate(group=[{0, 1}])
  LogicalProject(DEPTNO=[$7], DEPTNO0=[$9])
    LogicalJoin(condition=[=($7, $9)], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])

LogicalProject(DEPTNO=[$0], DEPTNO0=[$1])
  LogicalJoin(condition=[=($0, $1)], joinType=[inner])
    LogicalAggregate(group=[{0}])
      LogicalProject(DEPTNO=[$7])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

testPullAggregateThroughUnion
LogicalAggregate(group=[{0, 1}])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}])
      LogicalProject(DEPTNO=[$7], JOB=[$2])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}])
      LogicalProject(DEPTNO=[$7], JOB=[$2])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}])
  LogicalUnion(all=[true])
    LogicalProject(DEPTNO=[$7], JOB=[$2])
      EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$7], JOB=[$2])
      EnumerableTableScan(table=[[EMP]])

testPushSumNullableThroughUnion
LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
  LogicalProject(ENAME=[$1], MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0}], SUM1=[SUM($1)])
      LogicalProject(ENAME=[$1], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0}], EXPR$1=[SUM($1)])
      LogicalProject(ENAME=[$1], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

testPushCountStarGroupingSetsThroughUnion
LogicalAggregate(group=[{0, 1}], EXPR$2=[COUNT()])
  LogicalProject(DEPTNO=[$7], JOB=[$2])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[SUM($2)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}], COUNT1=[COUNT()])
      LogicalProject(DEPTNO=[$7], JOB=[$2])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}], COUNT1=[COUNT()])
      LogicalProject(DEPTNO=[$7], JOB=[$2])
        EnumerableTableScan(table=[[EMP]])

testPushMinGroupingSetsThroughUnion
LogicalAggregate(group=[{0, 1}], EXPR$2=[MIN($2)])
  LogicalProject(DEPTNO=[$7], JOB=[$2], EMPNO=[$0])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0, 1}], EXPR$2=[MIN($2)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0, 1}], MIN1=[MIN($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], EMPNO=[$0])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}], MIN1=[MIN($2)])
      LogicalProject(DEPTNO=[$7], JOB=[$2], EMPNO=[$0])
        EnumerableTableScan(table=[[EMP]])

testPullConstantIntoJoin
LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  LogicalJoin(condition=[=($0, $9)], joinType=[left])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  LogicalJoin(condition=[true], joinType=[left])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
        EnumerableTableScan(table=[[DEPT]])

testMergeUnionMixed2
LogicalUnion(all=[false])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
          EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[false])
  LogicalUnion(all=[false])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
        EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

testDistinctCountMultipleNoGroup
LogicalAggregate(group=[{}], EXPR$0=[COUNT(DISTINCT $0)], EXPR$1=[COUNT(DISTINCT $1)])
  LogicalProject(ENAME=[$1], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[$2], EXPR$1=[$3])
  LogicalAggregate(group=[{0, 1}], EXPR$0=[COUNT($0)], EXPR$1=[COUNT($1)])
    LogicalProject(ENAME=[$1], JOB=[$2])
      EnumerableTableScan(table=[[EMP]])

testSemiJoinRuleLeft
LogicalProject(NAME=[$1])
  LogicalJoin(condition=[=($0, $2)], joinType=[left])
    EnumerableTableScan(table=[[DEPT]])
    LogicalAggregate(group=[{0}])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($6, 100)])
          EnumerableTableScan(table=[[EMP]])

LogicalProject(NAME=[$1])
  EnumerableTableScan(table=[[DEPT]])

testPushMaxNullableThroughUnion
LogicalAggregate(group=[{0}], EXPR$1=[MAX($1)])
  LogicalProject(ENAME=[$1], MGR=[$3])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalAggregate(group=[{0}], EXPR$1=[MAX($1)])
  LogicalUnion(all=[true])
    LogicalAggregate(group=[{0}], MAX1=[MAX($1)])
      LogicalProject(ENAME=[$1], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0}], MAX1=[MAX($1)])
      LogicalProject(ENAME=[$1], MGR=[$3])
        EnumerableTableScan(table=[[EMP]])

