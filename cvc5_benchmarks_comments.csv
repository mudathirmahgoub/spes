Test Name,comment
testEmptySort,compares two empty tables but we don't know the type of the second table
testPushFilterWithRank,Uses RANK() OVER PARTITION BY clause which uses list semantics
testSortUnionTranspose,Uses FETCH NEXT 10 ROWS ONLY clause which uses list semantics
testPushFilterWithRankExpr,Uses RANK() OVER PARTITION BY clause which uses list semantics
testEmptySortLimitZero,"Two issues FETCH NEXT 0 ROWS ONLY, and compares empty tables but we don't know the type of the second table"
testSortUnionTranspose2,"Order by clauses can be removed, but it defeats the purpose of the test"
testSortUnionTranspose3,FETCH NEXT 0 ROWS ONLY
testSemiJoinTrim,"Not supported by SPES because it has exists keyword. However, it should be supported by cvc5 as long as the query is translated properly using inner join between dept and emp. However, Calcite translates it by adding a boolean true to the inner select and then using aggregate function min for it."
testExpandFilterInComposite,the sql query uses in keyword. Calcite translates that into an aggregation query with count functions
testWhereOrSubQuery,the sql query contains in keyword.
testEmptyProject2,"Calcite can't parse (values), so I modified the test to be parsed."
testPushSemiJoinPastJoinRuleRight, "Calciate can't compile the query whereas postgres can"
testPushSemiJoinPastProject, "It uses SQL trim functions. I think we can support it. For now it is excluded"
testExpandJoinScalar,"SINGLE_VALUE function is not understood"
testExpandProjectScalar,"SINGLE_VALUE function is not understood"
testExpandFilterScalar,"SINGLE_VALUE function is not understood"
testPullConstantIntoJoin2,"weird parsing error Conversion to relational algebra failed to preserve datatypes:"