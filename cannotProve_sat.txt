testPullNull
LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
  LogicalFilter(condition=[AND(=(CAST($7):INTEGER, 7), =(CAST($0):INTEGER, 10), IS NULL($3), =(CAST($0):INTEGER, 10))])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EMPNO=[10], ENAME=[$1], JOB=[$2], MGR=[null:INTEGER], HIREDATE=[$4], SAL=[$6], COMM=[$5], DEPTNO=[7], SLACKER=[$8])
  LogicalFilter(condition=[AND(=(CAST($7):INTEGER, 7), IS NULL($3), =(CAST($0):INTEGER, 10))])
    EnumerableTableScan(table=[[EMP]])

testRemoveSemiJoin
LogicalProject(ENAME=[$1])
  LogicalFilter(condition=[<>($7, $9)])
    LogicalJoin(condition=[true], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])

LogicalProject(ENAME=[$1])
  LogicalJoin(condition=[=($7, $9)], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

testPullConstantThroughUnion
LogicalUnion(all=[true])
  LogicalProject(EXPR$0=[2], DEPTNO=[$7], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])
  LogicalProject(EXPR$0=[3], DEPTNO=[$7], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[2], DEPTNO=[$0], JOB=[$1])
  LogicalUnion(all=[true])
    LogicalProject(DEPTNO=[$7], JOB=[$2])
      EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$7], JOB=[$2])
      EnumerableTableScan(table=[[EMP]])

testWhereInCorrelated
LogicalProject(SAL=[$6])
  LogicalJoin(condition=[AND(=($1, $10), =($0, $9))], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    LogicalAggregate(group=[{0, 1}])
      LogicalProject(DEPTNO=[$0], NAME0=[$2])
        LogicalFilter(condition=[=($2, CAST($1):VARCHAR)])
          LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
            EnumerableTableScan(table=[[DEPT]])

LogicalProject(SAL=[$6])
  LogicalJoin(condition=[AND(=($9, $12), =($0, $10))], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], JOB0=[CAST($2):VARCHAR])
      EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
      EnumerableTableScan(table=[[DEPT]])

testReduceConstantsProjectNullable*
LogicalProject(MGR=[$3])
  LogicalFilter(condition=[=(CAST($3):INTEGER, 11)])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(MGR=[10])
  LogicalFilter(condition=[=(CAST($3):INTEGER, 10)])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferencePreventProjectPullUp
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalProject(DEPTNO=[$5])
      LogicalFilter(condition=[>=($7, 7)])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalProject(DEPTNO=[$5])
      LogicalFilter(condition=[>($7, 7)])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceJoin3way
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($16, $25)], joinType=[inner])
    LogicalJoin(condition=[=($7, $16)], joinType=[inner])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>=($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($16, $25)], joinType=[inner])
    LogicalJoin(condition=[=($7, $16)], joinType=[inner])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($7, 7)])
        EnumerableTableScan(table=[[EMP]])

testRemoveSemiJoinRight
LogicalProject(ENAME=[$1])
  LogicalFilter(condition=[AND(=($7, $9), <>($9, $18))])
    LogicalJoin(condition=[true], joinType=[inner])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(ENAME=[$1])
  LogicalJoin(condition=[=($9, $18)], joinType=[inner])
    LogicalJoin(condition=[=($7, $9)], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceProject
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($7, 7)])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($7, 7)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($7, 7)])
        EnumerableTableScan(table=[[EMP]])

testReduceConstantsDup2
LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
  LogicalFilter(condition=[AND(=(CAST($7):INTEGER, 7), =(CAST($7):INTEGER, 7), =(CAST($0):INTEGER, 10), IS NULL($3), =(CAST($0):INTEGER, 10))])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EMPNO=[10], ENAME=[$1], JOB=[$2], MGR=[null:INTEGER], HIREDATE=[$4], SAL=[$6], COMM=[$5], DEPTNO=[$7], SLACKER=[$8])
  LogicalFilter(condition=[false])
    EnumerableTableScan(table=[[EMP]])

testReduceConstantsNull
LogicalProject(N=[$0])
  LogicalFilter(condition=[IS NOT NULL($0)])
    LogicalProject(N=[$0])
      LogicalFilter(condition=[AND(IS NULL($0), IS NULL($0))])
        LogicalProject(N=[null:INTEGER])
          EnumerableTableScan(table=[[EMP]])

LogicalProject(N=[null:INTEGER])
  EnumerableTableScan(table=[[EMP]])

testPushSemiJoinPastJoinRuleLeft
LogicalProject(ENAME=[$1])
  LogicalFilter(condition=[AND(=($7, $9), <>($0, $11))])
    LogicalJoin(condition=[true], joinType=[inner])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(ENAME=[$1])
  LogicalJoin(condition=[=($0, $22)], joinType=[inner])
    LogicalJoin(condition=[=($7, $20)], joinType=[inner])
      LogicalJoin(condition=[=($0, $11)], joinType=[inner])
        LogicalJoin(condition=[=($7, $9)], joinType=[inner])
          EnumerableTableScan(table=[[EMP]])
          EnumerableTableScan(table=[[DEPT]])
        EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[EMP]])

testExtractJoinFilterRule
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[>=($7, $9)], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[=($7, $9)])
    LogicalJoin(condition=[true], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])

testTransitiveInferenceFullOuterJoin
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[AND(>($7, 7), >=($16, 9))])
    LogicalJoin(condition=[=($7, $16)], joinType=[full])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[AND(>($7, 7), >($16, 9))])
    LogicalJoin(condition=[=($7, $16)], joinType=[full])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[EMP]])

testDecorrelateTwoIn
LogicalProject(SAL=[$6])
  LogicalJoin(condition=[AND(=($1, $12), =($0, $11))], joinType=[inner])
    LogicalJoin(condition=[AND(=($2, $10), =($0, $9))], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      LogicalAggregate(group=[{0, 1}])
        LogicalProject(DEPTNO=[$0], NAME0=[$2])
          LogicalFilter(condition=[=($2, CAST($1):VARCHAR)])
            LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
              EnumerableTableScan(table=[[DEPT]])
    LogicalAggregate(group=[{0, 1}])
      LogicalProject(EMPNO=[$0], ENAME0=[$9])
        LogicalJoin(condition=[>=($9, $1)], joinType=[inner])
          EnumerableTableScan(table=[[EMP]])
          LogicalAggregate(group=[{0}])
            LogicalProject(ENAME=[$1])
              LogicalJoin(condition=[AND(=($2, $10), =($0, $9))], joinType=[inner])
                EnumerableTableScan(table=[[EMP]])
                LogicalAggregate(group=[{0, 1}])
                  LogicalProject(DEPTNO=[$0], NAME0=[$2])
                    LogicalFilter(condition=[=($2, CAST($1):VARCHAR)])
                      LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
                        EnumerableTableScan(table=[[DEPT]])

LogicalProject(SAL=[$6])
  LogicalJoin(condition=[AND(=($11, $14), =($0, $12))], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$10], NAME=[$11], ENAME0=[CAST($1):VARCHAR])
      LogicalJoin(condition=[AND(=($9, $12), =($0, $10))], joinType=[inner])
        LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], JOB0=[CAST($2):VARCHAR])
          EnumerableTableScan(table=[[EMP]])
        LogicalProject(DEPTNO=[$0], NAME=[$1], NAME0=[CAST($1):VARCHAR])
          EnumerableTableScan(table=[[DEPT]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], ENAME0=[CAST($1):VARCHAR])
      EnumerableTableScan(table=[[EMP]])

testMergeFilter
LogicalProject(NAME=[$1])
  LogicalFilter(condition=[=(CAST($0):INTEGER, 11)])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
        EnumerableTableScan(table=[[DEPT]])

LogicalProject(NAME=[$1])
  LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
    EnumerableTableScan(table=[[DEPT]])

testPushProjectPastSetOp
LogicalProject(SAL=[$6])
  LogicalUnion(all=[true])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[false])
  LogicalProject(SAL=[$6])
    EnumerableTableScan(table=[[EMP]])
  LogicalProject(SAL=[$6])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceJoin
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($7, 7)])
        EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($7, 7)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($7, 7)])
        EnumerableTableScan(table=[[EMP]])

testFullOuterJoinSimplificationToRightOuter
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[>=($8, 100)])
    LogicalJoin(condition=[=($0, $9)], joinType=[full])
      EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $9)], joinType=[right])
    EnumerableTableScan(table=[[DEPT]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($6, 100)])
        EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceConstantEquiPredicate
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[<>($7, $16)], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

testPushProjectPastFilter
LogicalProject(EXPR$0=[+($0, $7)])
  LogicalFilter(condition=[AND(=(CAST($6):INTEGER, *(10, $5)), =(CAST(UPPER($1)):VARCHAR, 'FO0'))])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[+($0, $4)])
  LogicalFilter(condition=[AND(=(CAST($2):INTEGER, *(10, $3)), =(CAST(UPPER($1)):VARCHAR, 'FOO'))])
    LogicalProject(EMPNO=[$0], ENAME=[$1], SAL=[$6], COMM=[$5], DEPTNO=[$7])
      EnumerableTableScan(table=[[EMP]])

testPushFilterThroughSemiJoin
LogicalProject(DEPTNO=[$0], NAME=[$1], DEPTNO0=[$2])
  LogicalFilter(condition=[<=($0, 10)])
    LogicalJoin(condition=[=($0, $2)], joinType=[inner])
      EnumerableTableScan(table=[[DEPT]])
      LogicalProject(DEPTNO=[$7])
        EnumerableTableScan(table=[[EMP]])

LogicalProject(DEPTNO=[$0], NAME=[$1], DEPTNO0=[$2])
  LogicalJoin(condition=[=($0, $2)], joinType=[inner])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[<($0, 10)])
        EnumerableTableScan(table=[[DEPT]])
    LogicalProject(DEPTNO=[$7])
      EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceUnion3way
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalUnion(all=[true])
      LogicalProject(DEPTNO=[$0])
        LogicalUnion(all=[true])
          LogicalProject(DEPTNO=[$7])
            LogicalFilter(condition=[>($7, 7)])
              EnumerableTableScan(table=[[EMP]])
          LogicalProject(DEPTNO=[$7])
            LogicalFilter(condition=[>($7, 10)])
              EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 1)])
          EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalUnion(all=[true])
      LogicalProject(DEPTNO=[$0])
        LogicalUnion(all=[true])
          LogicalProject(DEPTNO=[$7])
            LogicalFilter(condition=[>=($7, 7)])
              EnumerableTableScan(table=[[EMP]])
          LogicalProject(DEPTNO=[$7])
            LogicalFilter(condition=[>($7, 10)])
              EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 1)])
          EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(>($7, 7), >($7, 10), >($7, 1))])
        EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceLeftOuterJoin
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[>=($16, 9)])
    LogicalJoin(condition=[=($7, $16)], joinType=[left])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[>($16, 9)])
    LogicalJoin(condition=[=($7, $16)], joinType=[left])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])

testPushJoinThroughUnionOnRight
LogicalProject(SAL=[$6])
  LogicalJoin(condition=[true], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])

LogicalProject(EMPNO=[$0])
  LogicalUnion(all=[true])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], EMPNO0=[$9], ENAME0=[$10], JOB0=[$11], MGR0=[$12], HIREDATE0=[$13], COMM0=[$14], SAL0=[$15], DEPTNO0=[$16], SLACKER0=[$17])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], EMPNO0=[$9], ENAME0=[$10], JOB0=[$11], MGR0=[$12], HIREDATE0=[$13], COMM0=[$14], SAL0=[$15], DEPTNO0=[$16], SLACKER0=[$17])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[EMP]])

testFullOuterJoinSimplificationToInner
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[AND(=(CAST($1):VARCHAR, 'Charli'), >($8, 100))])
    LogicalJoin(condition=[=($0, $9)], joinType=[full])
      EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $9)], joinType=[inner])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[=(CAST($1):VARCHAR, 'Charlie')])
        EnumerableTableScan(table=[[DEPT]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($6, 100)])
        EnumerableTableScan(table=[[EMP]])

testReduceOrCaseWhen
LogicalProject(SAL=[$6])
  LogicalFilter(condition=[OR(IS NULL(CASE(=(CAST($6):INTEGER, 1000), null:INTEGER, 1)), IS NULL(CASE(=(CAST($6):INTEGER, 2000), null:INTEGER, 1)))])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(SAL=[$6])
  LogicalFilter(condition=[OR(=(CAST($6):INTEGER, 100), =(CAST($6):INTEGER, 2000))])
    EnumerableTableScan(table=[[EMP]])

testMergeUnionAll
LogicalUnion(all=[true])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalUnion(all=[true])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
          EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[true])
  LogicalUnion(all=[true])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
        EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

testLeftOuterJoinSimplificationToInner
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[>($8, 1000)])
    LogicalJoin(condition=[=($0, $9)], joinType=[left])
      EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $9)], joinType=[inner])
    EnumerableTableScan(table=[[DEPT]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>($6, 100)])
        EnumerableTableScan(table=[[EMP]])

testMergeJoinFilter
LogicalProject(DEPTNO=[$0], ENAME=[$1])
  LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
    LogicalProject(DEPTNO=[$9], ENAME=[$1])
      LogicalJoin(condition=[AND(=($7, $9), =($11, 10))], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        LogicalProject(DEPTNO=[$0], NAME=[$1], DEPTNO0=[CAST($0):INTEGER])
          EnumerableTableScan(table=[[DEPT]])

LogicalProject(DEPTNO=[$9], ENAME=[$1])
  LogicalJoin(condition=[=($7, $9)], joinType=[inner])
    EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[>=($0, 10)])
        EnumerableTableScan(table=[[DEPT]])

testMergeUnionDistinct
LogicalUnion(all=[false])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalUnion(all=[false])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
          EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[false])
  LogicalUnion(all=[false])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($7, 10)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
        EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceNoPullUpExprs
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(=(CAST($7):INTEGER, 7), =(CAST($7):INTEGER, 9), >($5, 10))])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(>=($7, 7), =(CAST($7):INTEGER, 9), >($5, 10))])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceConjunctInPullUp
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(=(CAST($7):INTEGER, 7), =(CAST($7):INTEGER, 9), >($7, 10))])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(>=($7, 7), =(CAST($7):INTEGER, 9), >($7, 10))])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(>=($7, 7), =(CAST($7):INTEGER, 9), >($7, 10))])
        EnumerableTableScan(table=[[EMP]])

testPushSemiJoinPastFilter
LogicalProject(ENAME=[$1])
  LogicalFilter(condition=[AND(=($7, $9), =(CAST($1):VARCHAR, 'fo0'))])
    LogicalJoin(condition=[true], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])

LogicalProject(ENAME=[$1])
  LogicalJoin(condition=[=($0, $2)], joinType=[inner])
    LogicalProject(DEPTNO=[$7], ENAME=[$1])
      LogicalFilter(condition=[=(CAST($1):VARCHAR, 'foo')])
        LogicalJoin(condition=[=($7, $9)], joinType=[inner])
          EnumerableTableScan(table=[[EMP]])
          EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[DEPT]])

testPullConstantIntoFilter
LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
  LogicalFilter(condition=[>(+($7, 5), $0)])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
        EnumerableTableScan(table=[[EMP]])

LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
  LogicalFilter(condition=[>=(15, $0)])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
        EnumerableTableScan(table=[[EMP]])

testTransitiveInferencePullUpThruAlias
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalProject(DEPTNO=[$5])
      LogicalFilter(condition=[>($5, 7)])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalProject(DEPTNO=[$5])
      LogicalFilter(condition=[>=($5, 7)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($7, 7)])
        EnumerableTableScan(table=[[EMP]])

testReduceConstantsIsNotNull
LogicalProject(EMPNO=[$0])
  LogicalFilter(condition=[AND(=(CAST($0):INTEGER, 10), IS NOT NULL($0))])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EMPNO=[$0])
  LogicalFilter(condition=[>=($0, 10)])
    EnumerableTableScan(table=[[EMP]])

testPullConstantIntoProject
LogicalProject(DEPTNO=[$7], EXPR$1=[+($7, 1)], EXPR$2=[+($0, $7)])
  LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(DEPTNO=[11], EXPR$1=[11], EXPR$2=[+($0, 10)])
  LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceUnionAlwaysTrue
LogicalProject(DEPTNO=[$0], DEPTNO0=[$1])
  LogicalJoin(condition=[=($0, $1)], joinType=[inner])
    LogicalProject(DEPTNO=[$7])
      LogicalFilter(condition=[<($7, 4)])
        EnumerableTableScan(table=[[EMP]])
    LogicalUnion(all=[true])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$7])
        EnumerableTableScan(table=[[EMP]])

LogicalProject(DEPTNO=[$0], DEPTNO0=[$1])
  LogicalJoin(condition=[=($0, $1)], joinType=[inner])
    LogicalProject(DEPTNO=[$7])
      LogicalFilter(condition=[>=($7, 4)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$0])
      LogicalFilter(condition=[<($0, 4)])
        LogicalUnion(all=[true])
          LogicalProject(DEPTNO=[$7])
            LogicalFilter(condition=[>=($7, 7)])
              EnumerableTableScan(table=[[EMP]])
          LogicalProject(DEPTNO=[$7])
            EnumerableTableScan(table=[[EMP]])

testRemoveSemiJoinWithFilter
LogicalProject(ENAME=[$1])
  LogicalFilter(condition=[AND(=($7, $9), =(CAST($1):VARCHAR, 'foo'))])
    LogicalJoin(condition=[true], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      EnumerableTableScan(table=[[DEPT]])

LogicalProject(ENAME=[$1])
  LogicalJoin(condition=[=($7, $9)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($1):VARCHAR, 'fo0')])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

testRightOuterJoinSimplificationToInner
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[=(CAST($1):VARCHAR, 'Charli')])
    LogicalJoin(condition=[=($0, $9)], joinType=[right])
      EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $9)], joinType=[inner])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[=(CAST($1):VARCHAR, 'Charlie')])
        EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[EMP]])

testPushJoinCondDownToProject
LogicalProject(DEPTNO=[$0], DEPTNO0=[$9])
  LogicalFilter(condition=[>=(+($0, 10), *($9, 2))])
    LogicalJoin(condition=[true], joinType=[inner])
      EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(DEPTNO=[$0], DEPTNO0=[$10])
  LogicalJoin(condition=[=($2, $12)], joinType=[inner])
    LogicalProject(DEPTNO=[$0], NAME=[$1], F2=[+($0, 10)])
      EnumerableTableScan(table=[[DEPT]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], SAL=[$6], COMM=[$5], DEPTNO=[$7], SLACKER=[$8], F9=[*($7, 2)])
      EnumerableTableScan(table=[[EMP]])

testRemoveSemiJoinRightWithFilter
LogicalProject(ENAME=[$1])
  LogicalFilter(condition=[AND(=($7, $9), =($9, $18), =(CAST($10):VARCHAR, 'foo'))])
    LogicalJoin(condition=[true], joinType=[inner])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(ENAME=[$1])
  LogicalJoin(condition=[=($9, $18)], joinType=[inner])
    LogicalJoin(condition=[=($7, $9)], joinType=[inner])
      EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$0], NAME=[$1])
        LogicalFilter(condition=[=(CAST($1):VARCHAR, 'fo0')])
          EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[EMP]])

testFullOuterJoinSimplificationToLeftOuter
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[=(CAST($1):VARCHAR, 'Charli')])
    LogicalJoin(condition=[=($0, $9)], joinType=[full])
      EnumerableTableScan(table=[[DEPT]])
      EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $9)], joinType=[left])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[=(CAST($1):VARCHAR, 'Charlie')])
        EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceUnion
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalUnion(all=[true])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>=($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 10)])
          EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $8)], joinType=[inner])
    LogicalUnion(all=[true])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 7)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(DEPTNO=[$7])
        LogicalFilter(condition=[>($7, 10)])
          EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[OR(>($7, 7), >($7, 10))])
        EnumerableTableScan(table=[[EMP]])

testPullConstantIntoJoin
LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  LogicalJoin(condition=[=($0, $9)], joinType=[left])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], DEPTNO0=[$9], NAME=[$10])
  LogicalJoin(condition=[true], joinType=[left])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($0, 10)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$0], NAME=[$1])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 10)])
        EnumerableTableScan(table=[[DEPT]])

testSwapOuterJoin
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($0, $9)], joinType=[left])
    EnumerableTableScan(table=[[DEPT]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[>=($7, $9)], joinType=[right])
    EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[DEPT]])

testPushJoinThroughUnionOnLeft
LogicalProject(SAL=[$6])
  LogicalJoin(condition=[true], joinType=[inner])
    LogicalUnion(all=[false])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        EnumerableTableScan(table=[[EMP]])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(SAL=[$6])
  LogicalUnion(all=[true])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], EMPNO0=[$9], ENAME0=[$10], JOB0=[$11], MGR0=[$12], HIREDATE0=[$13], COMM0=[$14], SAL0=[$15], DEPTNO0=[$16], SLACKER0=[$17])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8], EMPNO0=[$9], ENAME0=[$10], JOB0=[$11], MGR0=[$12], HIREDATE0=[$13], COMM0=[$14], SAL0=[$15], DEPTNO0=[$16], SLACKER0=[$17])
      LogicalJoin(condition=[true], joinType=[inner])
        EnumerableTableScan(table=[[EMP]])
        EnumerableTableScan(table=[[EMP]])

testMergeUnionMixed2
LogicalUnion(all=[false])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalUnion(all=[false])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
          EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[false])
  LogicalUnion(all=[true])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
        EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

testPushProjectPastFilter2*
LogicalProject(MGR=[$3])
  LogicalFilter(condition=[CASE(<($3, 10), true, false)])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(MGR=[$0])
  LogicalFilter(condition=[<=($0, 10)])
    LogicalProject(MGR=[$3])
      EnumerableTableScan(table=[[EMP]])

testSemiJoinReduceConstants
LogicalProject(SAL=[$0])
  LogicalJoin(condition=[=($1, $2)], joinType=[inner])
    LogicalProject(SAL=[$0], DEPTNO=[$1])
      LogicalFilter(condition=[=(CAST($1):INTEGER, 200)])
        LogicalProject(SAL=[$6], DEPTNO=[$7])
          EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$1])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 100)])
        LogicalProject(SAL=[$6], DEPTNO=[$7])
          EnumerableTableScan(table=[[EMP]])

LogicalProject(SAL=[$0])
  LogicalJoin(condition=[=($1, $2)], joinType=[inner])
    LogicalProject(SAL=[$0], DEPTNO=[$1])
      LogicalFilter(condition=[>=($1, 200)])
        LogicalProject(SAL=[$6], DEPTNO=[$7])
          EnumerableTableScan(table=[[EMP]])
    LogicalProject(DEPTNO=[$1])
      LogicalFilter(condition=[=(CAST($0):INTEGER, 100)])
        LogicalProject(SAL=[$6], DEPTNO=[$7])
          EnumerableTableScan(table=[[EMP]])

testReduceNestedCaseWhen
LogicalProject(SAL=[$6])
  LogicalFilter(condition=[IS TRUE(CASE(=(CAST($6):INTEGER, 1000), IS NULL(CASE(=(CAST($6):INTEGER, 1000), null:INTEGER, 1)), IS NULL(CASE(=(CAST($6):INTEGER, 2000), null:INTEGER, 1))))])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(SAL=[$6])
  LogicalFilter(condition=[CASE(=(CAST($6):INTEGER, 100), =(CAST($6):INTEGER, 1000), =(CAST($6):INTEGER, 2000))])
    EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceRightOuterJoin
LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[>($7, 7)])
    LogicalJoin(condition=[=($7, $16)], joinType=[right])
      EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>($7, 9)])
          EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalFilter(condition=[>=($7, 7)])
    LogicalJoin(condition=[=($7, $16)], joinType=[right])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>=($7, 9)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>=($7, 9)])
          EnumerableTableScan(table=[[EMP]])

testTransitiveInferenceComplexPredicate
LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[AND(>($7, 7), =($5, $7), >(+($5, $7), /($5, 2)))])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[=($6, $7)])
        EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[1])
  LogicalJoin(condition=[=($7, $16)], joinType=[inner])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[AND(>=($7, 7), =($5, $7), >(+($5, $7), /($5, 2)))])
        EnumerableTableScan(table=[[EMP]])
    LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
      LogicalFilter(condition=[>=($7, 7)])
        LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
          LogicalFilter(condition=[=($6, $7)])
            EnumerableTableScan(table=[[EMP]])

testPullConstantThroughUnion2
LogicalUnion(all=[true])
  LogicalProject(EXPR$0=[2], DEPTNO=[$7], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])
  LogicalProject(EXPR$0=[1], DEPTNO=[$7], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[true])
  LogicalProject(EXPR$0=[1], DEPTNO=[$7], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])
  LogicalProject(EXPR$0=[1], DEPTNO=[$7], JOB=[$2])
    EnumerableTableScan(table=[[EMP]])

testPullConstantThroughUnion3
LogicalUnion(all=[false])
  LogicalProject(EXPR$0=[2], EXPR$1=[3])
    EnumerableTableScan(table=[[EMP]])
  LogicalProject(EXPR$0=[2], EXPR$1=[3])
    EnumerableTableScan(table=[[EMP]])

LogicalProject(EXPR$0=[2], EXPR$1=[3])
  LogicalUnion(all=[true])
    LogicalProject(EXPR$0=[2])
      EnumerableTableScan(table=[[EMP]])
    LogicalProject(EXPR$0=[2])
      EnumerableTableScan(table=[[EMP]])

testMergeUnionMixed
LogicalUnion(all=[true])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalUnion(all=[false])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
          EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

LogicalUnion(all=[true])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalUnion(all=[false])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[>=($7, 10)])
          EnumerableTableScan(table=[[EMP]])
      LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
        LogicalFilter(condition=[=(CAST($7):INTEGER, 20)])
          EnumerableTableScan(table=[[EMP]])
  LogicalProject(EMPNO=[$0], ENAME=[$1], JOB=[$2], MGR=[$3], HIREDATE=[$4], COMM=[$5], SAL=[$6], DEPTNO=[$7], SLACKER=[$8])
    LogicalFilter(condition=[=(CAST($7):INTEGER, 30)])
      EnumerableTableScan(table=[[EMP]])

