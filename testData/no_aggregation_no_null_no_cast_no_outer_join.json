[
    {
        "name": "testEmptyProject2",
        "q1": "SELECT t0.EXPR$0 + t0.EXPR$1 + t0.EXPR$0 FROM (VALUES  (10, 1),  (30, 3)) AS t WHERE t.EXPR$0 + t.EXPR$1 > 50",
        "q2": "SELECT * FROM (VALUES) AS t3"
    },
    {
        "name": "testEmptyFilterProjectUnion",
        "q1": "SELECT * FROM (SELECT * FROM (VALUES  (10, 1),  (30, 3)) AS t UNION ALL SELECT * FROM (VALUES  (20, 2)) AS t0) AS t1 WHERE t1.X + t1.Y > 30",
        "q2": "SELECT * FROM (VALUES  (30, 3)) AS t3"
    },
    {
        "name": "testPushSemiJoinPastJoinRuleRight",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.DEPTNO = DEPT0.DEPTNO INNER JOIN DEPT AS DEPT1 INNER JOIN EMP AS EMP2 ON DEPT1.DEPTNO = EMP2.DEPTNO ON EMP1.DEPTNO = DEPT1.DEPTNO INNER JOIN EMP AS EMP3 ON DEPT0.DEPTNO = EMP3.DEPTNO"
    },
    {
        "name": "testReduceValuesUnderProjectFilter",
        "q1": "SELECT t0.EXPR$0 + t0.EXPR$1 AS X, t0.EXPR$1 AS B, t0.EXPR$0 AS A FROM (VALUES  (10, 1),  (30, 7),  (20, 3)) AS t WHERE t.EXPR$0 - t.EXPR$1 < 21",
        "q2": "SELECT * FROM (VALUES  (11, 1, 10),  (23, 3, 20)) AS t2"
    },
    {
        "name": "testMergeMinus",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 EXCEPT SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 EXCEPT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 EXCEPT SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 EXCEPT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30"
    },
    {
        "name": "testEmptyMinus",
        "q1": "SELECT * FROM (SELECT * FROM (VALUES  (30, 3)) AS t WHERE t.EXPR$0 > 30 EXCEPT SELECT * FROM (VALUES  (20, 2)) AS t1) AS t2 EXCEPT SELECT * FROM (VALUES  (40, 4)) AS t3",
        "q2": "SELECT * FROM (VALUES) AS t5"
    },
    {
        "name": "testReduceValuesUnderProject",
        "q1": "SELECT t.EXPR$0 + t.EXPR$1 FROM (VALUES  (10, 1),  (20, 3)) AS t",
        "q2": "SELECT * FROM (VALUES  (11),  (23)) AS t1"
    },
    {
        "name": "testReduceValuesUnderFilter",
        "q1": "SELECT * FROM (VALUES  (10, 'x'),  (20, 'y')) AS t WHERE t.EXPR$0 < 15",
        "q2": "SELECT * FROM (VALUES  (10, 'x')) AS t1"
    },
    {
        "name": "testReduceConstantsDup",
        "q1": "SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE DEPT.DEPTNO = 7 AND DEPT.DEPTNO = 8",
        "q2": "SELECT t1.DEPTNO FROM (VALUES) AS t1"
    },
    {
        "name": "testRemoveSemiJoin",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO",
        "q2": "SELECT EMP0.ENAME FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO"
    },
    {
        "name": "testPullConstantThroughUnion",
        "q1": "SELECT 2, EMP.DEPTNO, EMP.JOB FROM EMP AS EMP UNION ALL SELECT 2, EMP0.DEPTNO, EMP0.JOB FROM EMP AS EMP0",
        "q2": "SELECT 2, t6.DEPTNO, t6.JOB FROM (SELECT EMP1.DEPTNO, EMP1.JOB FROM EMP AS EMP1 UNION ALL SELECT EMP2.DEPTNO, EMP2.JOB FROM EMP AS EMP2) AS t6"
    },
    {
        "name": "testWhereInCorrelated",
        "q1": "SELECT EMP.SAL FROM EMP AS EMP WHERE EMP.EMPNO IN (SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE EMP.JOB = DEPT.NAME)",
        "q2": "SELECT EMP0.SAL FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.JOB = DEPT0.NAME AND EMP0.EMPNO = DEPT0.DEPTNO"
    },
    {
        "name": "testReduceConstantsProjectNullable*",
        "q1": "SELECT EMP.MGR FROM EMP AS EMP WHERE EMP.MGR = 10",
        "q2": "SELECT 10 AS MGR FROM EMP AS EMP0 WHERE EMP0.MGR = 10"
    },
    {
        "name": "testTransitiveInferencePreventProjectPullUp",
        "q1": "SELECT 1 FROM (SELECT EMP.COMM AS DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t0 INNER JOIN EMP AS EMP0 ON t0.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT EMP1.COMM AS DEPTNO FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t3 INNER JOIN EMP AS EMP2 ON t3.DEPTNO = EMP2.DEPTNO"
    },
    {
        "name": "testTransitiveInferenceJoin3way",
        "q1": "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO INNER JOIN EMP AS EMP1 ON EMP0.DEPTNO = EMP1.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7) AS t2 ON t1.DEPTNO = t2.DEPTNO INNER JOIN (SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 7) AS t3 ON t2.DEPTNO = t3.DEPTNO"
    },
    {
        "name": "testRemoveSemiJoinRight",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.DEPTNO = DEPT0.DEPTNO INNER JOIN EMP AS EMP2 ON DEPT0.DEPTNO = EMP2.DEPTNO"
    },
    {
        "name": "testReduceExpressionsNot",
        "q1": "SELECT * FROM (VALUES  (FALSE),  (TRUE)) AS t WHERE NOT t.EXPR$0",
        "q2": "SELECT * FROM (VALUES  (FALSE),  (TRUE)) AS t1 WHERE NOT t1.EXPR$0"
    },
    {
        "name": "testTransitiveInferenceProject",
        "q1": "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t2 ON t1.DEPTNO = t2.DEPTNO"
    },
    {
        "name": "testReduceConstantsCalc",
        "q1": "SELECT * FROM (SELECT UPPER(SUBSTRING(t6.X FROM 1 FOR 2) || SUBSTRING(t6.X FROM 3)) AS U, SUBSTRING(t6.X FROM 1 FOR 1) AS S FROM (SELECT * FROM (SELECT 'table' AS X FROM (VALUES  (TRUE)) AS t UNION SELECT 'view' FROM (VALUES  (TRUE)) AS t1) AS t3 UNION SELECT 'foreign table' FROM (VALUES  (TRUE)) AS t4) AS t6) AS t7 WHERE t7.U = 'TABLE'",
        "q2": "SELECT 'TABLE' AS U, 't' AS S FROM (VALUES  (TRUE)) AS t9"
    },
    {
        "name": "testReduceConstantsNegatedInverted",
        "q1": "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.EMPNO > 10 AND EMP.EMPNO <= 10",
        "q2": "SELECT t1.EMPNO FROM (VALUES) AS t1"
    },
    {
        "name": "testPushSemiJoinPastJoinRuleLeft",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.EMPNO = EMP0.EMPNO",
        "q2": "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.DEPTNO = DEPT0.DEPTNO INNER JOIN EMP AS EMP2 ON EMP1.EMPNO = EMP2.EMPNO INNER JOIN DEPT AS DEPT1 ON EMP1.DEPTNO = DEPT1.DEPTNO INNER JOIN EMP AS EMP3 ON EMP1.EMPNO = EMP3.EMPNO"
    },
    {
        "name": "testExtractJoinFilterRule",
        "q1": "SELECT 1 FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO",
        "q2": "SELECT 1 FROM EMP AS EMP0, DEPT AS DEPT0 WHERE EMP0.DEPTNO = DEPT0.DEPTNO"
    },
    {
        "name": "testDecorrelateTwoIn",
        "q1": "SELECT EMP.SAL FROM EMP AS EMP WHERE EMP.EMPNO IN (SELECT DEPT.DEPTNO FROM DEPT AS DEPT WHERE EMP.JOB = DEPT.NAME) AND EMP.EMPNO IN (SELECT EMP0.EMPNO FROM EMP AS EMP0 WHERE EMP.ENAME = EMP0.ENAME)",
        "q2": "SELECT EMP1.SAL FROM EMP AS EMP1 INNER JOIN DEPT AS DEPT0 ON EMP1.JOB = DEPT0.NAME AND EMP1.EMPNO = DEPT0.DEPTNO INNER JOIN (SELECT EMP2.EMPNO, EMP2.ENAME FROM EMP AS EMP2) AS t5 ON EMP1.ENAME = t5.ENAME AND EMP1.EMPNO = t5.EMPNO"
    },
    {
        "name": "testPushFilterWithRank",
        "q1": "SELECT * FROM (SELECT EMP.ENAME, RANK() OVER (PARTITION BY EMP.DEPTNO ORDER BY EMP.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS R FROM EMP AS EMP) AS t WHERE t.R < 2",
        "q2": "SELECT * FROM (SELECT EMP0.ENAME, RANK() OVER (PARTITION BY EMP0.DEPTNO ORDER BY EMP0.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS R FROM EMP AS EMP0) AS t1 WHERE t1.R < 2"
    },
    {
        "name": "testMergeFilter",
        "q1": "SELECT t.NAME FROM (SELECT * FROM DEPT AS DEPT WHERE DEPT.DEPTNO = 10) AS t WHERE t.DEPTNO = 10",
        "q2": "SELECT DEPT0.NAME FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10"
    },
    {
        "name": "testPushProjectPastSetOp",
        "q1": "SELECT t.SAL FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t",
        "q2": "SELECT EMP1.SAL FROM EMP AS EMP1 UNION ALL SELECT EMP2.SAL FROM EMP AS EMP2"
    },
    {
        "name": "testMergeMinusRightDeep",
        "q1": "SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 EXCEPT SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20 EXCEPT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30) AS t2",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 EXCEPT SELECT * FROM (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 EXCEPT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30) AS t7"
    },
    {
        "name": "testEmptyJoin",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE FALSE) AS t INNER JOIN DEPT AS DEPT ON t.DEPTNO = DEPT.DEPTNO",
        "q2": "SELECT * FROM (VALUES) AS t0"
    },
    {
        "name": "testEmptySort",
        "q1": "SELECT * FROM EMP AS EMP WHERE FALSE ORDER BY EMP.DEPTNO",
        "q2": "SELECT * FROM (VALUES) AS t1 ORDER BY t1.DEPTNO"
    },
    {
        "name": "testTransitiveInferenceJoin",
        "q1": "SELECT 1 FROM EMP AS EMP INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 7) AS t ON EMP.DEPTNO = t.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t2 ON t1.DEPTNO = t2.DEPTNO"
    },
    {
        "name": "testSortUnionTranspose",
        "q1": "SELECT * FROM (SELECT DEPT.NAME FROM DEPT AS DEPT UNION ALL SELECT DEPT0.NAME FROM DEPT AS DEPT0) AS t1 ORDER BY t1.NAME FETCH NEXT 10 ROWS ONLY",
        "q2": "SELECT * FROM (SELECT DEPT1.NAME FROM DEPT AS DEPT1 ORDER BY DEPT1.NAME FETCH NEXT 10 ROWS ONLY UNION ALL SELECT DEPT2.NAME FROM DEPT AS DEPT2 ORDER BY DEPT2.NAME FETCH NEXT 10 ROWS ONLY) AS t10 ORDER BY t10.NAME FETCH NEXT 10 ROWS ONLY"
    },
    {
        "name": "testReduceConstantsNegated",
        "q1": "SELECT EMP.EMPNO FROM EMP AS EMP WHERE EMP.EMPNO = 10 AND NOT EMP.EMPNO = 10",
        "q2": "SELECT t1.EMPNO FROM (VALUES) AS t1"
    },
    {
        "name": "testPushSemiJoinPastProject",
        "q1": "SELECT t.ENAME, TRIM(BOTH ' ' FROM EMP.JOB), EMP.SAL * 2, t.DEPTNO FROM (SELECT EMP.ENAME, TRIM(BOTH ' ' FROM EMP.JOB), EMP.SAL * 2, EMP.DEPTNO FROM EMP AS EMP) AS t, DEPT AS DEPT WHERE t.DEPTNO = DEPT.DEPTNO",
        "q2": "SELECT t2.ENAME, TRIM(BOTH ' ' FROM EMP0.JOB), EMP0.SAL * 2, t2.DEPTNO FROM (SELECT EMP0.ENAME, TRIM(BOTH ' ' FROM EMP0.JOB), EMP0.SAL * 2, EMP0.DEPTNO FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO) AS t2 INNER JOIN DEPT AS DEPT1 ON t2.DEPTNO = DEPT1.DEPTNO"
    },
    {
        "name": "testPushFilterWithRankExpr",
        "q1": "SELECT * FROM (SELECT EMP.ENAME, (RANK() OVER (PARTITION BY EMP.DEPTNO ORDER BY EMP.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) + 1 AS R FROM EMP AS EMP) AS t WHERE t.R < 2",
        "q2": "SELECT * FROM (SELECT EMP0.ENAME, (RANK() OVER (PARTITION BY EMP0.DEPTNO ORDER BY EMP0.SAL RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) + 1 AS R FROM EMP AS EMP0) AS t1 WHERE t1.R < 2"
    },
    {
        "name": "testTransitiveInferenceConstantEquiPredicate",
        "q1": "SELECT 1 FROM EMP AS EMP INNER JOIN EMP AS EMP0 ON EMP.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT 1 FROM EMP AS EMP1 INNER JOIN EMP AS EMP2 ON EMP1.DEPTNO = EMP2.DEPTNO"
    },
    {
        "name": "testReduceValuesToEmpty",
        "q1": "SELECT t0.EXPR$0 + t0.EXPR$1 AS X, t0.EXPR$1 AS B, t0.EXPR$0 AS A FROM (VALUES  (10, 1),  (30, 7)) AS t WHERE t.EXPR$0 - t.EXPR$1 < 0",
        "q2": "SELECT * FROM (VALUES) AS t2"
    },
    {
        "name": "testPushFilterThroughSemiJoin",
        "q1": "SELECT * FROM DEPT AS DEPT INNER JOIN (SELECT EMP.DEPTNO FROM EMP AS EMP) AS t ON DEPT.DEPTNO = t.DEPTNO WHERE DEPT.DEPTNO <= 10",
        "q2": "SELECT * FROM (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO <= 10) AS t1 INNER JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0) AS t2 ON t1.DEPTNO = t2.DEPTNO"
    },
    {
        "name": "testTransitiveInferenceUnion3way",
        "q1": "SELECT 1 FROM (SELECT * FROM (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO > 7 UNION ALL SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 10) AS t3 UNION ALL SELECT EMP1.DEPTNO FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 1) AS t6 INNER JOIN EMP AS EMP2 ON t6.DEPTNO = EMP2.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM (SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7 UNION ALL SELECT EMP4.DEPTNO FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 10) AS t12 UNION ALL SELECT EMP5.DEPTNO FROM EMP AS EMP5 WHERE EMP5.DEPTNO > 1) AS t15 INNER JOIN (SELECT * FROM EMP AS EMP6 WHERE EMP6.DEPTNO > 7 OR EMP6.DEPTNO > 10 OR EMP6.DEPTNO > 1) AS t16 ON t15.DEPTNO = t16.DEPTNO"
    },
    {
        "name": "testPushJoinThroughUnionOnRight",
        "q1": "SELECT EMP.SAL FROM EMP AS EMP, (SELECT * FROM EMP AS EMP0 UNION ALL SELECT * FROM EMP AS EMP1) AS t",
        "q2": "SELECT t1.SAL FROM (SELECT * FROM EMP AS EMP2, EMP AS EMP3 UNION ALL SELECT * FROM EMP AS EMP4, EMP AS EMP5) AS t1"
    },
    {
        "name": "testMergeUnionAll",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION ALL SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 UNION ALL SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30"
    },
    {
        "name": "testEmptyMinus2",
        "q1": "SELECT * FROM (SELECT * FROM (SELECT * FROM (VALUES  (30, 3)) AS t EXCEPT SELECT * FROM (VALUES  (20, 2)) AS t0 WHERE t0.EXPR$0 > 30) AS t2 EXCEPT SELECT * FROM (VALUES  (40, 4)) AS t3) AS t4 EXCEPT SELECT * FROM (VALUES  (50, 5)) AS t5 WHERE t5.EXPR$0 > 50",
        "q2": "SELECT * FROM (VALUES  (30, 3)) AS t8 EXCEPT SELECT * FROM (VALUES  (40, 4)) AS t9"
    },
    {
        "name": "testMergeJoinFilter",
        "q1": "SELECT * FROM (SELECT DEPT.DEPTNO, EMP.ENAME FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = 10) AS t WHERE t.DEPTNO = 10",
        "q2": "SELECT t1.DEPTNO, EMP0.ENAME FROM EMP AS EMP0 INNER JOIN (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10) AS t1 ON EMP0.DEPTNO = t1.DEPTNO"
    },
    {
        "name": "testMergeUnionDistinct",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 UNION SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30"
    },
    {
        "name": "testTransitiveInferenceNoPullUpExprs",
        "q1": "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 7 OR EMP.DEPTNO = 9 OR EMP.COMM > 10) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 7 OR EMP1.DEPTNO = 9 OR EMP1.COMM > 10) AS t1 INNER JOIN EMP AS EMP2 ON t1.DEPTNO = EMP2.DEPTNO"
    },
    {
        "name": "testEmptyProject",
        "q1": "SELECT t0.EXPR$0 + t0.EXPR$1 + t0.EXPR$0 FROM (VALUES  (10, 1),  (30, 3)) AS t WHERE t.EXPR$0 + t.EXPR$1 > 50",
        "q2": "SELECT t3.X + t3.Y + t3.X FROM (VALUES) AS t3"
    },
    {
        "name": "testTransitiveInferenceConjunctInPullUp",
        "q1": "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 7 OR EMP.DEPTNO = 9 OR EMP.DEPTNO > 10) AS t INNER JOIN EMP AS EMP0 ON t.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 7 OR EMP1.DEPTNO = 9 OR EMP1.DEPTNO > 10) AS t1 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 7 OR EMP2.DEPTNO = 9 OR EMP2.DEPTNO > 10) AS t2 ON t1.DEPTNO = t2.DEPTNO"
    },
    {
        "name": "testPushSemiJoinPastFilter",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.ENAME = 'foo'",
        "q2": "SELECT t1.ENAME FROM (SELECT EMP0.DEPTNO,EMP0.ENAME FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO WHERE EMP0.ENAME = 'foo') AS t1 INNER JOIN DEPT AS DEPT1 ON t1.DEPTNO = DEPT1.DEPTNO"
    },
    {
        "name": "testPullConstantIntoFilter",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10) AS t WHERE t.DEPTNO + 5 > t.EMPNO",
        "q2": "SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 10) AS t1 WHERE 15 > t1.EMPNO"
    },
    {
        "name": "testTransitiveInferencePullUpThruAlias",
        "q1": "SELECT 1 FROM (SELECT EMP.COMM AS DEPTNO FROM EMP AS EMP WHERE EMP.COMM > 7) AS t0 INNER JOIN EMP AS EMP0 ON t0.DEPTNO = EMP0.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT EMP1.COMM AS DEPTNO FROM EMP AS EMP1 WHERE EMP1.COMM > 7) AS t3 INNER JOIN (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7) AS t4 ON t3.DEPTNO = t4.DEPTNO"
    },
    {
        "name": "testEmptySortLimitZero",
        "q1": "SELECT * FROM EMP AS EMP ORDER BY EMP.DEPTNO FETCH NEXT 0 ROWS ONLY",
        "q2": "SELECT * FROM (VALUES) AS t1"
    },
    {
        "name": "testMergeSetOpMixed",
        "q1": "SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION SELECT * FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20 INTERSECT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30) AS t2",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM (SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 INTERSECT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30) AS t7"
    },
    {
        "name": "testEmptyIntersect",
        "q1": "SELECT * FROM (SELECT * FROM (VALUES  (30, 3)) AS t INTERSECT SELECT * FROM (VALUES  (10, 1),  (30, 3)) AS t0 WHERE t0.EXPR$0 > 50) AS t2 INTERSECT SELECT * FROM (VALUES  (30, 3)) AS t3",
        "q2": "SELECT * FROM (VALUES) AS t5"
    },    
    {
        "name": "testTransitiveInferenceUnionAlwaysTrue",
        "q1": "SELECT * FROM (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO < 4) AS t0 INNER JOIN (SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 7 UNION ALL SELECT EMP1.DEPTNO FROM EMP AS EMP1) AS t4 ON t0.DEPTNO = t4.DEPTNO",
        "q2": "SELECT * FROM (SELECT EMP2.DEPTNO FROM EMP AS EMP2 WHERE EMP2.DEPTNO < 4) AS t6 INNER JOIN (SELECT * FROM (SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 7 UNION ALL SELECT EMP4.DEPTNO FROM EMP AS EMP4) AS t10 WHERE t10.DEPTNO < 4) AS t11 ON t6.DEPTNO = t11.DEPTNO"
    },
    {
        "name": "testMergeIntersect",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 INTERSECT SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 INTERSECT SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 INTERSECT SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 INTERSECT SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30"
    },
    {
        "name": "testAddRedundantSemiJoinRule",
        "q1": "SELECT 1 FROM EMP AS EMP INNER JOIN DEPT AS DEPT ON EMP.DEPTNO = DEPT.DEPTNO",
        "q2": "SELECT 1 FROM EMP AS EMP0 INNER JOIN DEPT AS DEPT0 ON EMP0.DEPTNO = DEPT0.DEPTNO INNER JOIN DEPT AS DEPT1 ON EMP0.DEPTNO = DEPT1.DEPTNO"
    },
    {
        "name": "testRemoveSemiJoinWithFilter",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO AND EMP.ENAME = 'foo'",
        "q2": "SELECT t1.ENAME FROM (SELECT * FROM EMP AS EMP0 WHERE EMP0.ENAME = 'foo') AS t1 INNER JOIN DEPT AS DEPT0 ON t1.DEPTNO = DEPT0.DEPTNO"
    },
    {
        "name": "testPushJoinCondDownToProject",
        "q1": "SELECT DEPT.DEPTNO, EMP.DEPTNO AS DEPTNO0 FROM DEPT AS DEPT, EMP AS EMP WHERE DEPT.DEPTNO + 10 = EMP.DEPTNO * 2",
        "q2": "SELECT t1.DEPTNO, t2.DEPTNO AS DEPTNO0 FROM (SELECT DEPT0.DEPTNO, DEPT0.NAME, DEPT0.DEPTNO + 10 AS $f2 FROM DEPT AS DEPT0) AS t1 INNER JOIN (SELECT EMP0.EMPNO, EMP0.ENAME, EMP0.JOB, EMP0.MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO, EMP0.SLACKER, EMP0.DEPTNO * 2 AS $f9 FROM EMP AS EMP0) AS t2 ON t1.$f2 = t2.$f9"
    },
    {
        "name": "testRemoveSemiJoinRightWithFilter",
        "q1": "SELECT EMP.ENAME FROM EMP AS EMP, DEPT AS DEPT, EMP AS EMP0 WHERE EMP.DEPTNO = DEPT.DEPTNO AND DEPT.DEPTNO = EMP0.DEPTNO AND DEPT.NAME = 'foo'",
        "q2": "SELECT EMP1.ENAME FROM EMP AS EMP1 INNER JOIN (SELECT * FROM DEPT AS DEPT0 WHERE DEPT0.NAME = 'foo') AS t1 ON EMP1.DEPTNO = t1.DEPTNO INNER JOIN EMP AS EMP2 ON t1.DEPTNO = EMP2.DEPTNO"
    },
    {
        "name": "testTransitiveInferenceUnion",
        "q1": "SELECT 1 FROM (SELECT EMP.DEPTNO FROM EMP AS EMP WHERE EMP.DEPTNO > 7 UNION ALL SELECT EMP0.DEPTNO FROM EMP AS EMP0 WHERE EMP0.DEPTNO > 10) AS t3 INNER JOIN EMP AS EMP1 ON t3.DEPTNO = EMP1.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT EMP2.DEPTNO FROM EMP AS EMP2 WHERE EMP2.DEPTNO > 7 UNION ALL SELECT EMP3.DEPTNO FROM EMP AS EMP3 WHERE EMP3.DEPTNO > 10) AS t9 INNER JOIN (SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO > 7 OR EMP4.DEPTNO > 10) AS t10 ON t9.DEPTNO = t10.DEPTNO"
    },
    {
        "name": "testPushJoinThroughUnionOnLeft",
        "q1": "SELECT t.SAL FROM (SELECT * FROM EMP AS EMP UNION ALL SELECT * FROM EMP AS EMP0) AS t, EMP AS EMP1",
        "q2": "SELECT t1.SAL FROM (SELECT * FROM EMP AS EMP2, EMP AS EMP3 UNION ALL SELECT * FROM EMP AS EMP4, EMP AS EMP5) AS t1"
    },
    {
        "name": "testMergeUnionMixed2",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION ALL SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "q2": "SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20 UNION SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30"
    },
    {
        "name": "testPushProjectPastFilter2*",
        "q1": "SELECT EMP.MGR FROM EMP AS EMP WHERE CASE WHEN EMP.MGR < 10 THEN TRUE ELSE FALSE END",
        "q2": "SELECT * FROM (SELECT EMP0.MGR FROM EMP AS EMP0) AS t2 WHERE t2.MGR < 10"
    },
    {
        "name": "testSemiJoinReduceConstants",
        "q1": "SELECT t0.SAL FROM (SELECT * FROM (SELECT EMP.SAL, EMP.DEPTNO FROM EMP AS EMP) AS t WHERE t.DEPTNO = 200) AS t0 INNER JOIN (SELECT t1.DEPTNO FROM (SELECT EMP0.SAL, EMP0.DEPTNO FROM EMP AS EMP0) AS t1 WHERE t1.SAL = 100) AS t3 ON t0.DEPTNO = t3.DEPTNO",
        "q2": "SELECT t6.SAL FROM (SELECT * FROM (SELECT EMP1.SAL, EMP1.DEPTNO FROM EMP AS EMP1) AS t5 WHERE t5.DEPTNO = 200) AS t6 INNER JOIN (SELECT t7.DEPTNO FROM (SELECT EMP2.SAL, EMP2.DEPTNO FROM EMP AS EMP2) AS t7 WHERE t7.SAL = 100) AS t9 ON t6.DEPTNO = t9.DEPTNO"
    },
    {
        "name": "testPullConstantIntoJoin2",
        "q1": "SELECT t0.EMPNO, t0.ENAME, t0.JOB, t0.MGR, t0.HIREDATE, t0.SAL, t0.COMM, t0.DEPTNO, t0.SLACKER, t1.DEPTNO AS DEPTNO0, t1.NAME FROM (SELECT EMP.EMPNO, EMP.ENAME, EMP.JOB, EMP.MGR, EMP.HIREDATE, EMP.SAL, EMP.COMM, EMP.DEPTNO, EMP.SLACKER, EMP.DEPTNO + EMP.EMPNO AS $f9 FROM EMP AS EMP WHERE EMP.EMPNO = 10) AS t0 INNER JOIN (SELECT DEPT.DEPTNO, DEPT.NAME, DEPT.DEPTNO + 5 AS $f2 FROM DEPT AS DEPT) AS t1 ON t0.EMPNO = t1.DEPTNO AND t0.$f9 = t1.$f2",
        "q2": "SELECT 10 AS EMPNO, t5.ENAME, t5.JOB, t5.MGR, t5.HIREDATE, t5.SAL, t5.COMM, t5.DEPTNO, t5.SLACKER, 10 AS DEPTNO0, t7.NAME FROM (SELECT 10 AS EMPNO, EMP0.ENAME, EMP0.JOB, EMP0.MGR, EMP0.HIREDATE, EMP0.SAL, EMP0.COMM, EMP0.DEPTNO, EMP0.SLACKER, EMP0.DEPTNO + 10 AS $f9 FROM EMP AS EMP0 WHERE EMP0.EMPNO = 10) AS t5 INNER JOIN (SELECT 10 AS DEPTNO, DEPT0.NAME, 15 AS $f2 FROM DEPT AS DEPT0 WHERE DEPT0.DEPTNO = 10) AS t7 ON t5.$f9 = 15"
    },
    {
        "name": "testSortUnionTranspose2",
        "q1": "SELECT * FROM (SELECT DEPT.NAME FROM DEPT AS DEPT UNION ALL SELECT DEPT0.NAME FROM DEPT AS DEPT0) AS t1 ORDER BY t1.NAME",
        "q2": "SELECT * FROM (SELECT DEPT1.NAME FROM DEPT AS DEPT1 ORDER BY DEPT1.NAME UNION ALL SELECT DEPT2.NAME FROM DEPT AS DEPT2 ORDER BY DEPT2.NAME) AS t7 ORDER BY t7.NAME"
    },
    {
        "name": "testSortUnionTranspose3",
        "q1": "SELECT * FROM (SELECT DEPT.NAME FROM DEPT AS DEPT UNION ALL SELECT DEPT0.NAME FROM DEPT AS DEPT0) AS t1 ORDER BY t1.NAME FETCH NEXT 0 ROWS ONLY",
        "q2": "SELECT * FROM (SELECT DEPT1.NAME FROM DEPT AS DEPT1 ORDER BY DEPT1.NAME FETCH NEXT 0 ROWS ONLY UNION ALL SELECT DEPT2.NAME FROM DEPT AS DEPT2 ORDER BY DEPT2.NAME FETCH NEXT 0 ROWS ONLY) AS t10 ORDER BY t10.NAME FETCH NEXT 0 ROWS ONLY"
    },
    {
        "name": "testTransitiveInferenceComplexPredicate",
        "q1": "SELECT 1 FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO > 7 AND EMP.COMM = EMP.DEPTNO AND EMP.COMM + EMP.DEPTNO > EMP.COMM / 2) AS t INNER JOIN (SELECT * FROM EMP AS EMP0 WHERE EMP0.SAL = EMP0.DEPTNO) AS t0 ON t.DEPTNO = t0.DEPTNO",
        "q2": "SELECT 1 FROM (SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO > 7 AND EMP1.COMM = EMP1.DEPTNO AND EMP1.COMM + EMP1.DEPTNO > EMP1.COMM / 2) AS t2 INNER JOIN (SELECT * FROM (SELECT * FROM EMP AS EMP2 WHERE EMP2.SAL = EMP2.DEPTNO) AS t3 WHERE t3.DEPTNO > 7) AS t4 ON t2.DEPTNO = t4.DEPTNO"
    },
    {
        "name": "testAlreadyFalseEliminatesFilter",
        "q1": "SELECT * FROM (VALUES  (1, 2)) AS t WHERE FALSE",
        "q2": "SELECT * FROM (VALUES) AS t1"
    },
    {
        "name": "testPullConstantThroughUnion2",
        "q1": "SELECT 2, EMP.DEPTNO, EMP.JOB FROM EMP AS EMP UNION ALL SELECT 1, EMP0.DEPTNO, EMP0.JOB FROM EMP AS EMP0",
        "q2": "SELECT 2, EMP1.DEPTNO, EMP1.JOB FROM EMP AS EMP1 UNION ALL SELECT 1, EMP2.DEPTNO, EMP2.JOB FROM EMP AS EMP2"
    },
    {
        "name": "testPullConstantThroughUnion3",
        "q1": "SELECT 2, 3 FROM EMP AS EMP UNION ALL SELECT 2, 3 FROM EMP AS EMP0",
        "q2": "SELECT 2, 3 FROM (SELECT 2 FROM EMP AS EMP1 UNION ALL SELECT 2 FROM EMP AS EMP2) AS t6"
    },
    {
        "name": "testMergeUnionMixed",
        "q1": "SELECT * FROM (SELECT * FROM EMP AS EMP WHERE EMP.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP0 WHERE EMP0.DEPTNO = 20) AS t1 UNION ALL SELECT * FROM EMP AS EMP1 WHERE EMP1.DEPTNO = 30",
        "q2": "SELECT * FROM (SELECT * FROM EMP AS EMP2 WHERE EMP2.DEPTNO = 10 UNION SELECT * FROM EMP AS EMP3 WHERE EMP3.DEPTNO = 20) AS t6 UNION ALL SELECT * FROM EMP AS EMP4 WHERE EMP4.DEPTNO = 30"
    }
    
]